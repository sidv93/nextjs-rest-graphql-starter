version: "2.1"

services:
  starter-db:
    restart: on-failure
    build:
      context: ./db
    env_file: .env
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_USER_NAME=${MONGO_USER_NAME}
      - MONGO_USER_PASSWORD=${MONGO_USER_PASSWORD}
    volumes:
      - starter-data:/data/db
    networks:
      - traefik_global

  rest-api:
    restart: on-failure
    build:
      context: ./rest-server
      args:
        - API_PORT=${API_PORT}
    env_file: .env
    labels:
      - "traefik.http.routers.rest-api.rule=PathPrefix(`${API_BASE_HREF}`)"
      - "traefik.http.routers.rest-api.middlewares=rest-api-stripprefix"
      - "traefik.http.middlewares.rest-api-stripprefix.stripprefix.prefixes=${API_BASE_HREF}"
      - "traefik.enable=true"
    volumes:
      - logs:${API_LOGS_PATH}
    healthcheck:
      test: "exit 0"
      timeout: ${API_HEALTHCHECK_TIMEOUT}
    depends_on:
      - starter-db
    networks:
      - traefik_global

  graphql:
    restart: on-failure
    build:
      context: ./graphql
      args:
        - API_PORT=${API_PORT}
    env_file: .env
    labels:
      - "traefik.http.routers.graphql.rule=PathPrefix(`${API_GRAPHQL_PATH}`)"
      - "traefik.enable=true"
    volumes:
      - logs:${API_LOGS_PATH}
    healthcheck:
      test: "exit 0"
      timeout: ${API_HEALTHCHECK_TIMEOUT}
    depends_on:
      - starter-db
    networks:
      - traefik_global

networks:
  traefik_global:
    external: true

volumes:
  starter-data:
  logs:
